version: '3.7'

networks:
  loki:

x-healthcheck: &x-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 5s

services:
  app_python:
    container_name: app_python
    image: muurrk/myapp:latest
    networks:
      - loki
    ports: 
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8080 || exit 1" ]
    logging: &logger
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"


  app_cpp:
    container_name: app_cpp
    image: muurrk/myapp_cpp:latest
    networks:
      - loki
    ports: 
      - "8070:8080"
    logging:      
      <<: *logger

  loki:
    container_name: loki
    image: grafana/loki:2.9.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    logging:      
      <<: *logger
    healthcheck:
      <<: *x-healthcheck
      test:
        - CMD-SHELL
        - wget --no-verbose --tries=1 -O /dev/null http://localhost:3100/api/health || exit 1


  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.0
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers/:ro
      - ./promtail.yaml:/etc/promtail/config.yaml:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - loki
    logging:      
      <<: *logger
    healthcheck:
      <<: *x-healthcheck
      test:
        - CMD-SHELL
        - wget --no-verbose --tries=1 -O /dev/null http://localhost:9080/api/health || exit 1


  grafana:
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
        - ./config/grafana/provisioning/datasources/prometheus.yml:/etc/grafana/provisioning/datasources/prometeus.yml:ro
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    logging:      
      <<: *logger
    healthcheck:
      <<: *x-healthcheck
      test:
        - CMD-SHELL
        - wget --no-verbose --tries=1 -O /dev/null http://localhost:3000/api/health || exit 1


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - '9090:9090'
    logging:      
      <<: *logger
    healthcheck:
      <<: *x-healthcheck
      test:
        - CMD-SHELL
        - wget --no-verbose --tries=1 -O /dev/null http://localhost:9090/-/healthy || exit 1

volumes:
  prometheus-data: